<?php

namespace App\Controller\Api;

use App\Controller\AppController;
use Cake\Controller\Controller;

class UsersController extends AppController
{
    public function initialize(): void
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->loadModel('Users');

        $this->Auth->allow(['addUser', 'deleteuser', 'edit','view']);
    }

    public function addUser()
    {
        try {
            $insert = $this->Users->newEmptyEntity();

            if ($this->request->is('post')) {
//                print_r($this->request->getData());die();
                $insert = $this->Users->patchEntity($insert, $this->request->getData());
//                print_r($insert);die();
                if ($this->Users->save($insert)) {
                    $this->set([
                        'success' => true,
                        'data' => $insert,
                        'message' => "Data Inserted Successfully..",
                        '_serialize' => ['success', 'data', 'message'],
                    ]);
                    $this->RequestHandler->renderAs($this, 'Json');
                    return;
                }
//                else {
//                    $this->set([
//                        'success' => false,
//                        'data' => null,
//                        'message' => $insert->error(),
//                        '_serialize' => ['success', 'data', 'message'],
//                    ]);
//                    $this->RequestHandler->renderAs($this, 'Json');
//                    return;
//                }
            }
        } catch (\Exception $e) {
            $this->set(['success' => false,
                'data' => null,
                'message' => $e->getMessage(),
                '_serialize' => ['success', 'data', 'message'],
            ]);
            $this->RequestHandler->renderAs($this, 'Json');
            return;
        }
    }

    public function deleteuser($id = null)
    {
        $this->request->allowMethod(['post', 'delete']);
        $user = $this->Users->get($id);
        if ($this->Users->delete($user)) {
            $this->set([
                'success' => true,
                'data' => null,
                'message' => 'User Deleted Successfully',
                '_serialize' => ['success', 'data', 'message']
            ]);
            $this->RequestHandler->renderAs($this, 'Json');
            return;
        } else {
            $this->set([
                'success' => false,
                'data' => null,
                'message' => 'Something Went Wrong',
                '_serialize' => ['success', 'data', 'message']
            ]);
        }

        return $this->redirect(['action' => 'index']);
    }

    public function edit($id = null)
    {
        $edit = $this->Users->get($id);

        if ($this->request->is(['post', 'patch', 'put'])) {
            $edit = $this->Users->patchEntity($edit, $this->request->getData());
            pr($edit);die();
            if ($this->Users->save($edit)) {
                $this->set([
                    'success' => true,
                    'data' => $edit,
                    'message' => "Record Updated Successfully..",
                    '_serialize' => ['success', 'data', 'message'],
                ]);
                $this->RequestHandler->renderAs($this, 'Json');
                return;
            }
            $this->set(['success' => false,
                'data' => null,
                'message' => 'something went wrong',
                '_serialize' => ['success', 'data', 'message'],
            ]);
            $this->RequestHandler->renderAs($this, 'Json');
            return;

        }
    }

    public function view($id = null){

        try {
            $view = $this->Users->get($id);
            $this->set([
                'success' => true,
//                'message' => 'View Ho gya',
                'data' => $view,
                '_serialize' => ['success','message','data']
            ]);

            $this->RequestHandler->renderAs($this, 'Json');
            return;
        }catch (\Exception $e){
            $this->set([
                'success' => false,
                'message' => 'Nahi Hua ',
                'data' => $e->getMessage(),
                '_serialize' => ['success','message','data']
            ]);
            $this->RequestHandler->renderAs($this, 'Json');
            return;
        }

    }
}
